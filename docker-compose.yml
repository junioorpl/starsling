version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: starsling-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: starsling
      POSTGRES_USER: starsling
      POSTGRES_PASSWORD: starsling_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U starsling -d starsling"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: starsling-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://starsling:starsling_password@postgres:5432/starsling
      - BETTER_AUTH_SECRET=your-secret-key-here-change-in-production
      - BETTER_AUTH_URL=http://localhost:3000
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - GITHUB_APP_CLIENT_ID=${GITHUB_APP_CLIENT_ID}
      - GITHUB_APP_CLIENT_SECRET=${GITHUB_APP_CLIENT_SECRET}
      - GITHUB_APP_PRIVATE_KEY=${GITHUB_APP_PRIVATE_KEY}
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET}
      - INNGEST_EVENT_KEY=${INNGEST_EVENT_KEY}
      - INNGEST_SIGNING_KEY=${INNGEST_SIGNING_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npm run db:push && npm run dev"

volumes:
  postgres_data:
